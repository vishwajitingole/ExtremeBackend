/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import BaseCommand from '../commands/base-command.js';
import { $TSFixMe } from '../commands/types.js';
import { ServerSettings } from './types.js';
export declare const runNetlifyBuild: ({ command, env, options, settings, timeline, }: {
    command: BaseCommand;
    options: $TSFixMe;
    settings: ServerSettings;
    env: NodeJS.ProcessEnv;
    timeline: 'build' | 'dev';
}) => Promise<{
    configPath?: undefined;
    configMutations?: undefined;
} | {
    configPath: string;
    configMutations?: undefined;
} | {
    configMutations: any;
    configPath?: undefined;
}>;
export declare const runDevTimeline: (options: Omit<Parameters<typeof runNetlifyBuild>[0], 'timeline'>) => Promise<{
    configPath?: undefined;
    configMutations?: undefined;
} | {
    configPath: string;
    configMutations?: undefined;
} | {
    configMutations: any;
    configPath?: undefined;
}>;
/**
 * @param {Omit<Parameters<typeof runNetlifyBuild>[0], 'timeline'>} options
 */
export declare const runBuildTimeline: (options: any) => Promise<{
    configPath?: undefined;
    configMutations?: undefined;
} | {
    configPath: string;
    configMutations?: undefined;
} | {
    configMutations: any;
    configPath?: undefined;
}>;
//# sourceMappingURL=run-build.d.ts.map